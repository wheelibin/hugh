// Code generated by mockery v2.36.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/wheelibin/hugh/internal/models"
)

// MockScheduleLightRepo is an autogenerated mock type for the lightRepo type
type MockScheduleLightRepo struct {
	mock.Mock
}

type MockScheduleLightRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *MockScheduleLightRepo) EXPECT() *MockScheduleLightRepo_Expecter {
	return &MockScheduleLightRepo_Expecter{mock: &_m.Mock}
}

// UpdateTargetState provides a mock function with given fields: scheduleName, target
func (_m *MockScheduleLightRepo) UpdateTargetState(scheduleName string, target models.LightState) error {
	ret := _m.Called(scheduleName, target)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, models.LightState) error); ok {
		r0 = rf(scheduleName, target)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockScheduleLightRepo_UpdateTargetState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateTargetState'
type MockScheduleLightRepo_UpdateTargetState_Call struct {
	*mock.Call
}

// UpdateTargetState is a helper method to define mock.On call
//   - scheduleName string
//   - target models.LightState
func (_e *MockScheduleLightRepo_Expecter) UpdateTargetState(scheduleName interface{}, target interface{}) *MockScheduleLightRepo_UpdateTargetState_Call {
	return &MockScheduleLightRepo_UpdateTargetState_Call{Call: _e.mock.On("UpdateTargetState", scheduleName, target)}
}

func (_c *MockScheduleLightRepo_UpdateTargetState_Call) Run(run func(scheduleName string, target models.LightState)) *MockScheduleLightRepo_UpdateTargetState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(models.LightState))
	})
	return _c
}

func (_c *MockScheduleLightRepo_UpdateTargetState_Call) Return(_a0 error) *MockScheduleLightRepo_UpdateTargetState_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockScheduleLightRepo_UpdateTargetState_Call) RunAndReturn(run func(string, models.LightState) error) *MockScheduleLightRepo_UpdateTargetState_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockScheduleLightRepo creates a new instance of MockScheduleLightRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockScheduleLightRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockScheduleLightRepo {
	mock := &MockScheduleLightRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
